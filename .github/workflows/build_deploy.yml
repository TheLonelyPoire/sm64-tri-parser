# Simple workflow for deploying static content to GitHub Pages
name: Deploy static content to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Pages
        uses: actions/configure-pages@v4
        
      - name: Create build directory
        run: |
          mkdir -p build
          
      - name: Copy viewer files
        run: |
          cp -r viewer/* build/
          
      - name: Copy data files
        run: |
          cp -r data build/
          
      - name: Fix relative paths for GitHub Pages
        run: |
          # Update paths in JavaScript files to work with GitHub Pages subdirectory
          sed -i "s|'../data/|'./data/|g" build/js/level-loader.js
          # Update any other relative paths that might break
          find build -name "*.js" -exec sed -i "s|../data/|./data/|g" {} \;
          
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './build'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
